!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AUTH_KEY_LEN	sr_vns_comm.c	243;"	d	file:
DEFAULT_AUTH_KEY_FILE	sr_main.c	42;"	d	file:
DEFAULT_HOST	sr_main.c	44;"	d	file:
DEFAULT_PORT	sr_main.c	43;"	d	file:
DEFAULT_RTABLE	sr_main.c	46;"	d	file:
DEFAULT_SERVER	sr_main.c	45;"	d	file:
DEFAULT_TOPO	sr_main.c	47;"	d	file:
SHA1CircularShift	sha1.c	46;"	d	file:
SHA1Input	sha1.c	/^void SHA1Input(     SHA1Context         *context,$/;"	f
SHA1PadMessage	sha1.c	/^void SHA1PadMessage(SHA1Context *context)$/;"	f
SHA1ProcessMessageBlock	sha1.c	/^void SHA1ProcessMessageBlock(SHA1Context *context)$/;"	f
SHA1Reset	sha1.c	/^void SHA1Reset(SHA1Context *context)$/;"	f
SHA1Result	sha1.c	/^int SHA1Result(SHA1Context *context)$/;"	f
SHA1_LEN	sr_vns_comm.c	244;"	d	file:
VERSION_INFO	sr_main.c	41;"	d	file:
__EXTENSIONS__	sr_main.c	17;"	d	file:
__USE_MISC	sr_rt.c	19;"	d	file:
main	sr_main.c	/^int main(int argc, char **argv)$/;"	f
sf_write_header	sr_dumper.c	/^sf_write_header(FILE *fp, int linktype, int thiszone, int snaplen)$/;"	f	file:
sr_add_interface	sr_if.c	/^void sr_add_interface(struct sr_instance* sr, const char* name)$/;"	f
sr_add_rt_entry	sr_rt.c	/^void sr_add_rt_entry(struct sr_instance* sr, struct in_addr dest,$/;"	f
sr_arp_req_not_for_us	sr_vns_comm.c	/^int  sr_arp_req_not_for_us(struct sr_instance* sr,$/;"	f
sr_connect_to_server	sr_vns_comm.c	/^int sr_connect_to_server(struct sr_instance* sr,unsigned short port,$/;"	f
sr_destroy_instance	sr_main.c	/^static void sr_destroy_instance(struct sr_instance* sr)$/;"	f	file:
sr_dump	sr_dumper.c	/^sr_dump(FILE *fp, const struct pcap_pkthdr *h, const unsigned char *sp)$/;"	f
sr_dump_close	sr_dumper.c	/^sr_dump_close(FILE *fp)$/;"	f
sr_dump_open	sr_dumper.c	/^sr_dump_open(const char *fname, int thiszone, int snaplen)$/;"	f
sr_ether_addrs_match_interface	sr_vns_comm.c	/^sr_ether_addrs_match_interface( struct sr_instance* sr, \/* borrowed *\/$/;"	f	file:
sr_get_interface	sr_if.c	/^struct sr_if* sr_get_interface(struct sr_instance* sr, const char* name)$/;"	f
sr_handle_auth_request	sr_vns_comm.c	/^int sr_handle_auth_request(struct sr_instance* sr, c_auth_request* req) {$/;"	f
sr_handle_auth_status	sr_vns_comm.c	/^int sr_handle_auth_status(struct sr_instance* sr, c_auth_status* status) {$/;"	f
sr_handle_hwinfo	sr_vns_comm.c	/^int sr_handle_hwinfo(struct sr_instance* sr, c_hwinfo* hwinfo)$/;"	f
sr_handle_rtable	sr_vns_comm.c	/^int sr_handle_rtable(struct sr_instance* sr, c_rtable* rtable) {$/;"	f
sr_handlepacket	sr_router.c	/^void sr_handlepacket(struct sr_instance* sr, $/;"	f
sr_init	sr_router.c	/^void sr_init(struct sr_instance* sr) $/;"	f
sr_init_instance	sr_main.c	/^static void sr_init_instance(struct sr_instance* sr)$/;"	f	file:
sr_load_rt	sr_rt.c	/^int sr_load_rt(struct sr_instance* sr,const char* filename)$/;"	f
sr_load_rt_wrap	sr_main.c	/^static void sr_load_rt_wrap(struct sr_instance* sr, char* rtable) {$/;"	f	file:
sr_log_packet	sr_vns_comm.c	/^void sr_log_packet(struct sr_instance* sr, uint8_t* buf, int len )$/;"	f
sr_print_if	sr_if.c	/^void sr_print_if(struct sr_if* iface)$/;"	f
sr_print_if_list	sr_if.c	/^void sr_print_if_list(struct sr_instance* sr)$/;"	f
sr_print_routing_entry	sr_rt.c	/^void sr_print_routing_entry(struct sr_rt* entry)$/;"	f
sr_print_routing_table	sr_rt.c	/^void sr_print_routing_table(struct sr_instance* sr)$/;"	f
sr_read_from_server	sr_vns_comm.c	/^int sr_read_from_server(struct sr_instance* sr \/* borrowed *\/)$/;"	f
sr_read_from_server_expect	sr_vns_comm.c	/^int sr_read_from_server_expect(struct sr_instance* sr \/* borrowed *\/, int expected_cmd)$/;"	f
sr_send_packet	sr_vns_comm.c	/^int sr_send_packet(struct sr_instance* sr \/* borrowed *\/,$/;"	f
sr_set_ether_addr	sr_if.c	/^void sr_set_ether_addr(struct sr_instance* sr, const unsigned char* addr)$/;"	f
sr_set_ether_ip	sr_if.c	/^void sr_set_ether_ip(struct sr_instance* sr, uint32_t ip_nbo)$/;"	f
sr_set_user	sr_main.c	/^void sr_set_user(struct sr_instance* sr)$/;"	f
sr_verify_routing_table	sr_main.c	/^int sr_verify_routing_table(struct sr_instance* sr)$/;"	f
usage	sr_main.c	/^static void usage(char* argv0)$/;"	f	file:
